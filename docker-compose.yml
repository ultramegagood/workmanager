version: '3.8'

services:
  postgresdb:
    image: postgres:alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      timeout: 20s
      retries: 10
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./src/database/init:/docker-entrypoint-initdb.d
    networks:
      - go-network
    
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: isabekmadiar7@gmail.com
      PGADMIN_DEFAULT_PASSWORD: rolling1450
    ports:
      - 8085:80
    depends_on:
      - postgresdb
    networks:
      - go-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    networks:
      - go-network

  redisinsight:
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - redisinsight:/db
    networks:
      - go-network

  go-app:
    build: .
    image: go-app
    ports:
      - 8080:8080
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/usr/src/go-app
    restart: on-failure
    env_file:
      - .env
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "curl", "-f", "${APP_URL}/v1/health-check"]
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 30s

volumes:
  dbdata:
  pgadmin:
  redisdata:
  redisinsight:

networks:
  go-network:
    driver: bridge
